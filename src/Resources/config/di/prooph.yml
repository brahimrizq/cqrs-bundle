parameters:

services:

    prooph.command.bus:
        class: Prooph\ServiceBus\CommandBus
        calls:
            - [ utilize, [ "@cqrs.handler.resolver" ]]
            - [ utilize, [ "@prooph.transaction.manager" ]]

    prooph.event.bus:
        class: Prooph\ServiceBus\EventBus
        calls:
            - [ utilize, [ "@cqrs.projector.resolver" ]]
            - [ utilize, [ "@cqrs.listener.resolver" ]]

    prooph.transaction.manager:
        class: Prooph\EventStoreBusBridge\TransactionManager
        calls:
            - [ setUp, [ "@prooph.event.store" ]]

    prooph.event.publisher:
        class: Prooph\EventStoreBusBridge\EventPublisher
        arguments: [ "@prooph.event.bus" ]
        calls:
            - [ setUp, [ "@prooph.event.store" ]]

    prooph.action.event.emitter:
        class: Prooph\Common\Event\ProophActionEventEmitter

    prooph.message.factory:
        class: Prooph\Common\Messaging\FQCNMessageFactory

    prooph.message.converter:
        class: Prooph\Common\Messaging\NoOpMessageConverter

    prooph.aggregate.translator:
        class: Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator